{"version":3,"sources":["api_Interface/api_interface.js","components/navbar/Navbar.jsx","screens/register/Register.jsx","components/spinner/Spinner.jsx","components/itemswheel/ItemsWheel.jsx","screens/home/Home.jsx","components/starsreview/StarsReview.jsx","components/carousel/Carousel.jsx","screens/movie/Movie.jsx","components/moviecard/MovieCard.jsx","screens/movies/Movies.jsx","index.js"],"names":["api","token_key","getMovie","id","a","fetch","then","res","json","getRandomMovies","number","resp","getMovies","filters","page","link","undefined","genres","for_kids","release_year","query","details","data","getGenres","getHeaders","isAuthenticated","localStorage","getItem","getReviews","headers","postReview","review","method","body","JSON","stringify","response","status","login","credentials","token","setItem","success","register","Navbar","history","useHistory","handleLogout","removeItem","push","className","to","Search","action","name","type","placeholder","ExitToApp","onClick","Register","useState","isLogIn","setIsLogIn","userNameErrors","setUserNameErrors","passwordErrors","setPasswordErrors","emailErrors","setEmailErrors","password","useRef","username","email","redirect","confirmRedirect","handleLogin","e","preventDefault","current","value","showerrors","handleregister","non_field_errors","src","alt","PersonAddOutlined","ref","EmailOutlined","LockOutlined","Spinner","movie","map","gen","join","Itemswheel","currentIndex","setCurrentIndex","movies","setMovies","useEffect","length","poster_path","index","classname","style","pointerEvents","title","tagline","language","ArrowBack","ArrowForward","Home","StarsReview","props","Array","keys","i","Star","StarHalf","StarsReviewInput","callback","callBack","Carousel","list","move","dir","listDims","getBoundingClientRect","parentDims","parentNode","x","width","transform","dist","KeyboardArrowLeft","KeyboardArrowRight","children","child","Movie","setMovie","reviews","setReviews","isLoaded","setIsLoaded","isReviews","setIsReviews","canReview","setCanReview","directing","writing","cinematography","editing","acting","sound","comment","myReview","setMyReview","movieid","useParams","isExpanded","can_review","expandCollapse","newReviews","slice","submitReview","addedReview","avg_review","reviewers_count","href","imdb_id","genre","genreName","overview","videos","video","frameborder","allow","onChange","target","required","reviewer","ExpandLess","ExpandMore","MovieCard","release_date","split","Movies","visibleDrawer","setVisibleDrawer","filterGenres","setFilterGenres","forKids","setForKids","pagesCount","setPagesCount","setPage","isLoading","setisLoading","pages_number","forEach","selected","loadMore","getFilters","filter","reduce","prev","releaseYearFilter","filterResults","movieList","FilterList","addGenre","CheckBoxOutlined","CheckBoxOutlineBlankOutlined","MoviesWrapper","parameters","URLSearchParams","useLocation","search","get","ReactDOM","render","StrictMode","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.33befe32.chunk.js","sourcesContent":["const api = '/api/';\r\nconst token_key = 'access-token';\r\n\r\n//get requests\r\nconst getMovie = async (id) => {\r\n    return await fetch(api + 'movie?id=' + id).then(res => res.json());\r\n}\r\nconst getRandomMovies=async (number)=>{\r\n    const resp=await fetch(api+'random?number='+number)\r\n    return await resp.json();\r\n}\r\nconst getMovies = async (filters, page) => {\r\n    var link = api + 'movies?';\r\n    if (filters.genres !== undefined) {\r\n        link += 'genres=' + filters.genres;\r\n        link += '&';\r\n    }\r\n    if (filters.for_kids !== undefined && filters.for_kids === true) {\r\n        link += 'for_kids=1';\r\n        link += '&';\r\n    }\r\n    if (filters.release_year !== undefined && filters.release_year !== '') {\r\n        link += 'release_year=' + filters.release_year;\r\n        link += '&';\r\n    }\r\n\r\n    if (filters.query !== undefined) {\r\n        link += 'q=' + filters.query;\r\n        link += '&';\r\n    }\r\n    if (filters.details !== undefined && filters.details === true) {\r\n        link += 'details=' + filters.details;\r\n        link += '&';\r\n    }\r\n\r\n    if (page !== undefined)\r\n        link += 'page=' + page;\r\n\r\n    let data = await fetch(link).then(res => res.json());\r\n    return data;\r\n}\r\n\r\nconst getGenres = async () => {\r\n    var link = api + 'genre';\r\n    let data = await fetch(link).then(res => res.json());\r\n    return data;\r\n}\r\nconst getHeaders = () => isAuthenticated() ? {\r\n    'Authorization': 'Token ' + localStorage.getItem(token_key)\r\n    , 'Content-type': 'application/json'\r\n} : undefined;\r\n\r\nconst getReviews = async (id) => {\r\n\r\n    return await fetch(api + 'reviews?id=' + id, { headers: getHeaders() }).then(res => res.json());\r\n}\r\n//post requests\r\nconst postReview = async (review) => {\r\n    const response = await fetch(api + 'reviews', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(review),\r\n        headers: getHeaders(),\r\n\r\n    });\r\n    if (response.status === 201)\r\n        return await response.json() //added\r\n    return null; //added\r\n\r\n}\r\n//Auth\r\nconst login = async (credentials) => {\r\n    let data = await fetch(api + 'login',\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n    if (data.token !== undefined) {\r\n        localStorage.setItem(token_key, data.token)\r\n        return { success: true };\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nconst register = async (credentials) => {\r\n    let data = await fetch(api + 'register',\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n    if (data.token !== undefined) {\r\n        localStorage.setItem(token_key, data.token)\r\n        return { success: true };\r\n    }\r\n    return data;\r\n}\r\nconst isAuthenticated = () => localStorage.getItem(token_key) !== null\r\nconst logout = () => localStorage.removeItem(token_key)\r\n\r\nexport { getReviews, getMovie, getMovies,getRandomMovies, getGenres, postReview, login, register, isAuthenticated, logout };","import React from 'react';\r\nimport './Navbar.scss'\r\nimport { Search, ExitToApp } from '@material-ui/icons';\r\nimport {\r\n    Link,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport { isAuthenticated ,logout} from '../../api_Interface/api_interface';\r\n\r\nconst Navbar = () => {\r\n    const history=useHistory();\r\n\r\n    const handleLogout = async()=>{\r\n        logout();\r\n        history.push('/auth');\r\n    }\r\n    return (\r\n        <div className=\"nav\">\r\n            <div className=\"nav-body\">\r\n                <div className=\"nav-container\">\r\n                    <Link to=\"/\">\r\n                        <h2 className=\"nav-logo\">\r\n                            <span className=\"sec-color font-large\">Z</span><span>eflex</span>\r\n                        </h2>\r\n                    </Link>\r\n                    <ul className=\"nav-items\">\r\n                        <Link to=\"/movies\" className=\"nav-item\">Home</Link>\r\n                        <Link to=\"/discover\" className=\"nav-item\">Discover</Link>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"search\">\r\n                        <Search className=\"icon\" />\r\n                        <form action=\"/movies\" method=\"get\">\r\n                        <input name=\"q\" type=\"text\" placeholder=\"Search ...\" />\r\n                        </form>\r\n                    </div>\r\n                    {isAuthenticated() ?\r\n                        <ExitToApp className=\"icon\" onClick={handleLogout}/>\r\n                        :<Link to={'/auth'}>Log in</Link>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import Navbar from '../../components/navbar/Navbar'\r\nimport { LockOutlined, PersonAddOutlined, EmailOutlined } from '@material-ui/icons'\r\nimport './Register.scss'\r\nimport { useState, useRef } from 'react'\r\nimport { login, register } from '../../api_Interface/api_interface'\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\nfunction Register() {\r\n\r\n  const [isLogIn, setIsLogIn] = useState(true);\r\n  const [userNameErrors, setUserNameErrors] = useState([]);\r\n  const [passwordErrors, setPasswordErrors] = useState([]);\r\n  const [emailErrors, setEmailErrors] = useState([]);\r\n\r\n  const password = useRef(null)\r\n  const username = useRef(null)\r\n  const email = useRef(null)\r\n  const history = useHistory();\r\n  const redirect=(confirmRedirect)=>{\r\n    if(confirmRedirect===true){\r\n      history.push('/');\r\n    }\r\n  }\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    let resp = await login({ username: username.current.value, password: password.current.value, })\r\n    showerrors(resp);\r\n    redirect(resp.success);\r\n  }\r\n  const handleregister = async (e) => {\r\n    e.preventDefault();\r\n    let resp = await register({\r\n      username: username.current.value, password: password.current.value,\r\n      email: email.current.value\r\n    })\r\n    showerrors(resp);\r\n    redirect(resp.success);\r\n  }\r\n\r\n  const showerrors = (resp) => {\r\n    if (resp.success)\r\n      return;\r\n\r\n    if (resp.username)\r\n      setUserNameErrors(resp.username)\r\n    else\r\n      setUserNameErrors([])\r\n    if (resp.email)\r\n      setEmailErrors(resp.email)\r\n    else\r\n      setEmailErrors([])\r\n\r\n    if (resp.password)\r\n      setPasswordErrors(resp.password)\r\n\r\n    if (resp.non_field_errors)\r\n      setPasswordErrors(resp.non_field_errors)\r\n\r\n    if (resp.password === undefined && resp.non_field_errors === undefined)\r\n      setPasswordErrors([])\r\n\r\n\r\n  }\r\n  return <div className=\"register\">\r\n    <Navbar />\r\n    <div id=\"backdrop-img\" >\r\n      <img src=\"https://assets.nflxext.com/ffe/siteui/vlv3/9c5457b8-9ab0-4a04-9fc1-e608d5670f1a/aad8cd4d-f4ac-49af-8539-25a81bf459d0/US-en-20210719-popsignuptwoweeks-perspective_alpha_website_large.jpg\" alt=\"\"></img>\r\n    </div>\r\n    <div className=\"input-container\">\r\n      <div className=\"form-selector\">\r\n        <div className={isLogIn ? \"form\" : \"form selected\"} onClick={() => setIsLogIn(false)}>\r\n          Register\r\n        </div>\r\n\r\n        <div className={isLogIn ? \"form selected\" : \"form\"} onClick={() => setIsLogIn(true)}>\r\n          Log in\r\n        </div>\r\n      </div>\r\n      <form className=\"form-data\">\r\n        <div className=\"form-inputs\">\r\n          <div className=\"form-input\">\r\n            <PersonAddOutlined className=\"icon\" />\r\n            <input placeholder=\"User Name\" type=\"text\" ref={username} />\r\n            <span>{userNameErrors}</span>\r\n          </div>\r\n          {!isLogIn &&\r\n            <div className=\"form-input\">\r\n              <EmailOutlined className=\"icon\" />\r\n              <input placeholder=\"email@example.com\" type=\"email\" ref={email} />\r\n              <span>{emailErrors}</span>\r\n            </div>\r\n          }\r\n          <div className=\"form-input\">\r\n            <LockOutlined className=\"icon\" />\r\n            <input placeholder=\"Password\" type=\"password\" ref={password} />\r\n            <span>{passwordErrors}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-actions\">\r\n          {isLogIn && <>\r\n            <p>\r\n              <span>Didn't create an account ? </span> <span className=\"link\" onClick={() => setIsLogIn(false)}>Register</span>\r\n            </p>\r\n            <button onClick={handleLogin}>\r\n              Log In\r\n            </button>\r\n          </>\r\n          }\r\n          {!isLogIn && <>\r\n            <p>\r\n              <span>Already have an Account ? </span> <span className=\"link\" onClick={() => setIsLogIn(true)}>Log in</span>\r\n            </p>\r\n            <button onClick={handleregister}>\r\n              Register\r\n            </button>\r\n          </>\r\n          }\r\n        </div>\r\n      </form>\r\n    </div>\r\n    {/* <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/odM92ap8_c0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\r\n  </div>\r\n}\r\n\r\nexport default Register","import React from 'react'\r\nimport './Spinner.scss'\r\nexport default function Spinner() {\r\n    return (\r\n        <div className=\"loader-wrapper\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport './ItemsWheel.scss'\r\nimport { ArrowBack, ArrowForward } from '@material-ui/icons'\r\nimport { getRandomMovies } from '../../api_Interface/api_interface';\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\";\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nconst getGenres = function (movie) {\r\n    var genres = movie.genres.map(gen => gen.name);\r\n    return genres.join(' , ');\r\n}\r\n\r\nexport default function Itemswheel() {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [movies, setMovies] = useState([]);\r\n\r\n\r\n    useEffect(async () => {\r\n        let data = await getRandomMovies(20);\r\n        setMovies(data);\r\n    }, []);\r\n\r\n    const next = () => {\r\n        if (currentIndex < movies.length - 1)\r\n            setCurrentIndex(currentIndex + 1)\r\n    };\r\n    const prev = () => {\r\n        if (currentIndex > 0)\r\n            setCurrentIndex(currentIndex - 1)\r\n    };\r\n\r\n    if (movies.length === 0)\r\n        return <Spinner/>\r\n        \r\n    return <div className=\"center\">\r\n        <div className=\"itemswheel\">\r\n            <div className=\"backdrop\">\r\n                <img src={movies[currentIndex].poster_path} alt=\"\" />\r\n            </div>\r\n\r\n            <div className=\"itemswheel-content\">\r\n                {movies.map((movie, index) => {\r\n                    var classname = \"\"\r\n                    if (index < currentIndex)\r\n                        classname = \"left\"\r\n                    else if (index > currentIndex)\r\n                        classname = \"right\"\r\n                    if (index > currentIndex + 1 || index < currentIndex - 1) {\r\n                        classname += \" hidden\"\r\n                    }\r\n\r\n                    return <Link to={\"movie/\" + movie.id}><div key={index} className=\"card\"\r\n                        style={{\r\n                            pointerEvents: index === currentIndex ? 'auto' : 'none'\r\n                        }}>\r\n                        <div className=\"card-content\">\r\n                            {index === currentIndex ?\r\n                                <div className=\"card-data rounded\">\r\n                                    <h2> {movie.title}</h2>\r\n                                    <span> {movie.tagline}</span>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <thead>Language:</thead>\r\n                                            <td> {movie.language}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <thead>Genres:</thead>\r\n                                            <td> {getGenres(movie)}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div> : ''\r\n                            }\r\n                            <div className=\"image-wrapper\">\r\n                                <img className={classname + \" rounded\"} src={movie.poster_path} alt={movie.title} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </Link>\r\n                })}\r\n            </div>\r\n\r\n            <div className=\"controllers\">\r\n                <div className=\"icon\" onClick={prev}>\r\n                    <ArrowBack />\r\n                </div>\r\n                <div className=\"icon\" onClick={next} >\r\n                    <ArrowForward />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport Itemswheel from '../../components/itemswheel/ItemsWheel';\r\nimport Navbar from '../../components/navbar/Navbar';\r\nimport './Home.scss'\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home\">\r\n            <Navbar/>\r\n            <Itemswheel/> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport { Star, StarHalf } from '@material-ui/icons/';\r\nimport './StarsReview.scss'\r\nfunction StarsReview(props) {\r\n    return (\r\n        <div className=\"review-stars\">\r\n            {\r\n                [...Array(5).keys()].map((i) => {\r\n                    const review = props.review;\r\n                    if (review >= i + 1)\r\n                        return <Star className=\"active\" />;\r\n                    if (review >= i + .5)\r\n                        return <StarHalf className=\"active\" />;\r\n                    return <Star />;\r\n                }\r\n                )\r\n            }\r\n        </div>)\r\n}\r\n\r\nfunction StarsReviewInput(props) {\r\n    const callback=props.callBack;\r\n    const value=props.value??0;\r\n\r\n    return (\r\n        <div className=\"review-stars\">\r\n            {\r\n                [...Array(5).keys()].map((i) => {\r\n\r\n                    return <Star className={value >= i + 1? \"active\":null} onClick={()=>callback(i+1)}/>;\r\n                }\r\n                )\r\n            }\r\n        </div>)\r\n}\r\n\r\n\r\nexport { StarsReview, StarsReviewInput };","import {  useRef } from 'react'\r\nimport './Carousel.scss'\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\r\nexport default function Carousel(props) {\r\n\r\n    const width = 300;\r\n    const list = useRef('');\r\n\r\n    const move = (dir) => {\r\n        let listDims = list.current.getBoundingClientRect();\r\n        let parentDims = list.current.parentNode.getBoundingClientRect();\r\n        if (dir === 'right') {\r\n            if (listDims.x + listDims.width <= parentDims.x + parentDims.width) { //can't move \r\n                list.current.style.transform = 'translateX(0px)';\r\n            }\r\n            else {\r\n                list.current.style.transform = 'translateX(' + (listDims.x - width) + 'px)';\r\n            }\r\n        }\r\n        else if (dir === 'left') {\r\n            if (listDims.x >= parentDims.x) {\r\n                list.current.style.transform = 'translateX(' + (parentDims.width - listDims.width) + 'px)';\r\n            } else {\r\n                let dist=listDims.x + width;\r\n                list.current.style.transform = 'translateX(' +dist+ 'px)';\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div {...props}>\r\n            <div className=\"carousel\">\r\n                <KeyboardArrowLeft className=\"icon left\" onClick={() => move('left')} />\r\n                <KeyboardArrowRight className=\"icon right\" onClick={() => move('right')} />\r\n                <div className=\"carousel-wrapper\" ref={list}>\r\n                    {props.children?.map((child) =>\r\n                        <div className=\"carousel-card selected\">\r\n                            {child}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect} from 'react';\r\nimport './Movie.scss'\r\nimport Navbar from '../../components/navbar/Navbar';\r\nimport { StarsReview, StarsReviewInput } from '../../components/starsreview/StarsReview';\r\nimport Carousel from '../../components/carousel/Carousel';\r\nimport { getMovie, getReviews, postReview } from '../../api_Interface/api_interface';\r\nimport { ExpandMore, ExpandLess } from '@material-ui/icons/';\r\nimport {\r\n    useParams, useHistory\r\n} from \"react-router-dom\";\r\nimport Spinner from '../../components/spinner/Spinner';\r\nconst Movie = (props) => {\r\n    const [movie, setMovie] = useState({});\r\n    const [reviews, setReviews] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [isReviews, setIsReviews] = useState(false);\r\n    const [canReview, setCanReview] = useState(false);\r\n    const [myReview, setMyReview] = useState({\r\n        directing:0,\r\n        writing:0,\r\n        cinematography:0,\r\n        editing:0,\r\n        acting:0,\r\n        sound:0,\r\n        comment:'.'\r\n    });\r\n    const history = useHistory();\r\n    const { movieid } = useParams();\r\n\r\n    const redirectToGenre = (genreName) => history.push('/movies?genre=' + genreName);\r\n    useEffect(async () => {\r\n        const movie = await getMovie(movieid);\r\n        setMovie(movie);\r\n        setIsLoaded(true);\r\n        const data = await getReviews(movieid);\r\n        for (let review in reviews)\r\n            review.isExpanded = false;\r\n        setReviews(data.reviews);\r\n        setCanReview(data.can_review);\r\n    }, []);\r\n    const expandCollapse = (index) => {\r\n        const newReviews = reviews.slice();\r\n        newReviews[index].isExpanded = !newReviews[index].isExpanded;\r\n        setReviews(newReviews);\r\n    }\r\n    const submitReview = async (index) => {\r\n        const review = {\r\n            ...myReview,\r\n            movie: movieid\r\n        };\r\n        const addedReview = await postReview(review);\r\n        if (addedReview ) {\r\n            setCanReview(false);\r\n            setReviews([addedReview, ...reviews]);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return ( \r\n        <div >\r\n            <Navbar />\r\n            {!isLoaded?<Spinner/>:<>\r\n            <div className=\"backdrop-wrapper\">\r\n                <div className=\"backdrop-right\">\r\n                    <img src={movie.poster_path} alt=\"\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"movie\">\r\n                <div className=\"movie-details\">\r\n                    <h1><span>{movie.title}</span> <span className=\"badge md sec\">{movie.language}</span></h1>\r\n                    <div className=\"review-imdb\">\r\n                        <div className=\"review\" onClick={() => setIsReviews(!isReviews)}>\r\n                            <StarsReview review={movie.review.avg_review} />\r\n                            <p className=\"badge gold sm\">{movie.review.avg_review ?? 0}</p>\r\n                            <p className=\"review-count\">\r\n                                ({movie.review.reviewers_count})\r\n                            </p>\r\n                        </div>\r\n                        <a href={\"https://www.imdb.com/title/\" + movie.imdb_id}> <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/69/IMDB_Logo_2016.svg\"  alt=\"\"/></a>\r\n                    </div>\r\n                    <div className=\"genres\">\r\n\r\n                        {movie.genres.map(genre =>\r\n                            <span key={genre.id} className=\"badge sm\" onClick={() => redirectToGenre(genre.name)}> {genre.name}</span>\r\n                        )}\r\n                    </div>\r\n                    <p className=\"tagline\">{movie.tagline}</p>\r\n                    <p>{movie.overview}</p>\r\n                    {movie.videos.length > 0 && !isReviews &&\r\n                        <Carousel className=\"videos\" >\r\n                            {\r\n                                movie.videos.map((video =>\r\n                                    <iframe key={video.id} width=\"300px\" src={\"https://www.youtube.com/embed/\" + video.link} title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;  gyroscope; picture-in-picture \" ></iframe>\r\n                                ))\r\n                            }\r\n                        </Carousel>\r\n                    }\r\n                </div>\r\n                {isReviews &&\r\n                    <div className=\"movie-reviews\">\r\n                        {canReview && <div className=\"movie-review-input\"><table className=\"review-stars-table\">\r\n\r\n                            <tr>\r\n                                <td>Directing</td>\r\n                                <td><StarsReviewInput value={myReview.directing} callBack={(value) => { setMyReview({ ...myReview, directing: value }) }} /></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Writing</td>\r\n                                <td><StarsReviewInput value={myReview.writing} callBack={(value) => { setMyReview({ ...myReview, writing: value }) }} /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Cinematography</td>\r\n                                <td><StarsReviewInput value={myReview.cinematography} callBack={(value) => { setMyReview({ ...myReview, cinematography: value }) }} /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Editing</td>\r\n                                <td><StarsReviewInput value={myReview.editing} callBack={(value) => { setMyReview({ ...myReview, editing: value }) }} /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Acting</td>\r\n                                <td><StarsReviewInput value={myReview.acting} callBack={(value) => { setMyReview({ ...myReview, acting: value }) }} /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Sound</td>\r\n                                <td><StarsReviewInput value={myReview.sound} callBack={(value) => { setMyReview({ ...myReview, sound: value }) }} /></td>\r\n                            </tr>\r\n                        </table>\r\n                            <div className=\"review-input\">\r\n                                <textarea  onChange={(e)=>setMyReview({...myReview,comment:e.target.value})} required placeholder={\"Review \" + movie.title} ></textarea>\r\n                                <button  type=\"button\" onClick={submitReview} >Review</button>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                        {reviews.map((review, index) => <>\r\n                            <div key={review.id} className=\"movie-review\">\r\n                                <div className=\"review-comment\">\r\n                                    <h3>\r\n                                        {review.reviewer}\r\n                                    </h3>\r\n                                    <p>\r\n                                        {review.comment}\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"right\">\r\n                                    {review.isExpanded ?\r\n                                        <>\r\n                                            <table className=\"review-stars-table\">\r\n\r\n                                                <tr>\r\n                                                    <td>directing</td>\r\n                                                    <td><StarsReview review={review.directing} /></td>\r\n                                                    <td><ExpandLess className=\"icon\" onClick={() => expandCollapse(index)} /></td>\r\n\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>writing</td>\r\n                                                    <td><StarsReview review={review.writing} /></td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>cinematography</td>\r\n                                                    <td><StarsReview review={review.cinematography} /></td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>editing</td>\r\n                                                    <td><StarsReview review={review.editing} /></td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>acting</td>\r\n                                                    <td><StarsReview review={review.acting} /></td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>sound</td>\r\n                                                    <td><StarsReview review={review.sound} /></td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </> : <>\r\n                                            <table className=\"review-stars-table\">\r\n\r\n                                                <tr>\r\n                                                    <td>Review</td>\r\n                                                    <td><StarsReview review={review.avg_review} /></td>\r\n                                                    <td><ExpandMore className=\"icon\" onClick={() => expandCollapse(index)} /></td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </>}\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                        </>\r\n                        )}\r\n                    </div>\r\n                }\r\n            </div>\r\n            </>\r\n             }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Movie;\r\n","import './MovieCard.scss'\r\n\r\nimport React from 'react'\r\nimport {\r\n    NavLink,\r\n} from \"react-router-dom\";\r\n\r\nexport default function MovieCard(props) {\r\n    return (\r\n        <NavLink to={\"/movie/\"+props.movie.id}>\r\n            <div className=\"movie-card\" >\r\n                <div className=\"movie-poster\">\r\n                    <img src={props.movie.poster_path} alt={props.movie.title+\" poster\"} />\r\n                </div>\r\n                <div className=\"movie-title\">\r\n                    <div className=\"movie-name\">\r\n                        {props.movie.title}\r\n                    </div>\r\n                    <div className=\"movie-year\">\r\n                        ({props.movie.release_date.split('-')[0]})\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Navbar from '../../components/navbar/Navbar';\r\nimport './Movies.scss'\r\nimport { FilterList, CheckBoxOutlineBlankOutlined, CheckBoxOutlined } from '@material-ui/icons'\r\nimport { getGenres, getMovies } from '../../api_Interface/api_interface'\r\nimport MovieCard from '../../components/moviecard/MovieCard';\r\nimport Spinner from '../../components/spinner/Spinner';\r\nconst Movies = (props) => {\r\n\r\n    //state \r\n    const [visibleDrawer, setVisibleDrawer] = useState(false);\r\n    const [filterGenres, setFilterGenres] = useState([]);\r\n    const [forKids, setForKids] = useState(false);\r\n    const [movies, setMovies] = useState([])\r\n    const [pagesCount, setPagesCount] = useState(1);\r\n    const [page, setPage] = useState(1);\r\n    const [isLoading, setisLoading] = useState(true)\r\n\r\n    //api calls\r\n    useEffect(async () => {\r\n        const filters = {\r\n            genres: props.genre ?? undefined,\r\n            query: props.query ?? undefined\r\n        };\r\n\r\n        const data = await getMovies(filters, 1);\r\n        setMovies(data.movies);\r\n        setPage(1);\r\n        setPagesCount(data.pages_number);\r\n        setisLoading(false);\r\n\r\n        const genres = await getGenres();\r\n        genres.forEach((genre, index) => {\r\n            genre.selected = genre.name === props.genre;\r\n            genre.id = index;\r\n        });\r\n        setFilterGenres(genres);\r\n    }, []);\r\n\r\n    const loadMore = async () => {\r\n        setisLoading(true);\r\n        const data = await getMovies(getFilters(), page + 1);\r\n        setPage(data.page);\r\n        setMovies([...movies, ...data.movies]);\r\n        setisLoading(false);\r\n\r\n    }\r\n    //filters\r\n    const addGenre = (index) => {\r\n        const genres = filterGenres.slice();\r\n        genres[index].selected = !genres[index].selected;\r\n        setFilterGenres(genres);\r\n    };\r\n\r\n    const getFilters = () => {\r\n        const filters = {}\r\n\r\n        filters.genres = filterGenres.filter(genre => genre.selected).reduce((prev, genre) => prev + genre.name + ',', '')\r\n        filters.query = props.query ?? undefined;\r\n        filters.forKids = forKids;\r\n        if (releaseYearFilter.current.value !== '')\r\n            filters.release_year = releaseYearFilter.current.value;\r\n        return filters;\r\n    }\r\n    const filterResults = async () => {\r\n\r\n        const filters = getFilters();\r\n        setisLoading(true);\r\n        const data = await getMovies(filters);\r\n        setMovies(data.movies);\r\n        setPagesCount(data.pages_number);\r\n        setPage(1);\r\n        setisLoading(false);\r\n        setVisibleDrawer(false);\r\n    }\r\n\r\n\r\n\r\n    const releaseYearFilter = useRef('');\r\n    const movieList = useRef('');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"backdrop-wrapper\"></div>\r\n            <Navbar />\r\n\r\n            <div className=\"filter-icon\" onClick={() => setVisibleDrawer(!visibleDrawer)}>\r\n                <FilterList className=\"icon\" />\r\n            </div>\r\n\r\n            <div className={visibleDrawer ? \"drawer\" : \"drawer hidden\"}>\r\n                <div className=\"drawer-content\">\r\n                    <h3>Genres:</h3>\r\n                    <div className=\"genre-container\">\r\n                        {\r\n                            filterGenres.map(genre => <div key={genre.id} className={genre.selected === true ? \"genre selected\" : \"genre\"}\r\n                                onClick={() => addGenre(genre.id)}>\r\n                                {genre.name}\r\n                            </div>)\r\n                        }\r\n\r\n                    </div>\r\n                    <hr className=\"fullwidth\" />\r\n\r\n                    <div className=\"flex f-between fullwidth padding-v sm\" onClick={() => setForKids(!forKids)}>\r\n                        <h3>For Kids:</h3>\r\n                        {forKids ? <CheckBoxOutlined /> : <CheckBoxOutlineBlankOutlined />}\r\n                    </div>\r\n                    <hr className=\"fullwidth\" />\r\n                    <div className=\"flex f-between fullwidth padding-v sm\" >\r\n                        <h3>Release year:</h3>\r\n                        <input className=\"input-text\" type=\"number\" placeholder=\"2021\" ref={releaseYearFilter} />\r\n                    </div>\r\n                    <hr className=\"fullwidth\" />\r\n                    <button type=\"button\" onClick={filterResults} >Filter</button>\r\n                </div>\r\n\r\n            </div>\r\n            {\r\n                movies.length===0 ? <h1 className=\"notfound\">Ooops we didn't find any Result</h1>:\r\n                <div className=\"movie-cards-container\" ref={movieList}>\r\n                    {\r\n                        movies.map(movie =>\r\n                            <MovieCard movie={movie} />)\r\n                    }\r\n                </div>\r\n            }\r\n            {isLoading ? <Spinner /> :\r\n                <>\r\n                    {page < pagesCount &&\r\n                        <div className=\"bottom\">\r\n                            <h3 onClick={loadMore}>Load more</h3>\r\n                        </div>\r\n                    }\r\n                </>\r\n            }\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Movies;\r\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Register from './screens/register/Register';\nimport Home from './screens/home/Home';\nimport Movie from './screens/movie/Movie';\nimport './index.scss'\nimport Movies from './screens/movies/Movies';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation,\n  Redirect,\n} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route  exact path=\"/auth\">\n          <Register />\n        </Route>\n        <Route exact path=\"/movies\">\n          <MoviesWrapper />\n        </Route>\n        <Route  exact path=\"/movie/:movieid\" children={<Movie />}/>\n        <Route  exact path=\"/discover\">\n          <Home/>\n        </Route>\n        <Route path=\"\">\n          <Redirect to=\"/movies\"/>\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nexport default function MoviesWrapper() {\n  const parameters= new URLSearchParams(useLocation().search);\n  return <Movies query={parameters.get('q')} genre={parameters.get('genre')} />\n}\n"],"sourceRoot":""}